configurations {
    wsdl2java
}

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        flatDir {
            dirs "${buildDir}/libs"
        }
    }

    dependencies {
        classpath("commons-io:commons-io:2.4")
    }
}

dependencies {
    wsdl2java 'org.apache.cxf:cxf-tools-wsdlto-core:2.7.0'
    wsdl2java 'org.apache.cxf:cxf-tools-wsdlto-frontend-jaxws:2.7.0'
    wsdl2java 'org.apache.cxf:cxf-tools-wsdlto-databinding-jaxb:2.7.0'
}

def wsdl2java = task generateJavaFromWsdl(type: JavaExec) {
    def wsdl = file('src/main/resources/wsdl/example.wsdl')
    def genSrcDir = file("${buildDir}/wsdlSources")

    inputs.file  wsdl
    outputs.dir genSrcDir
    classpath configurations.wsdl2java
    main "org.apache.cxf.tools.wsdlto.WSDLToJava"
    args '-d', genSrcDir.toString(), wsdl.toString()
    def byteArrayOutputStream = new org.apache.commons.io.output.ByteArrayOutputStream()
    errorOutput = new org.apache.commons.io.output.TeeOutputStream(System.err, byteArrayOutputStream)

    doLast {
        def str = byteArrayOutputStream.toString()

        if (str.contains('Usage : wsdl2java') || str.contains('WSDLToJava Error')) {
            throw new TaskExecutionException(
                    tasks[name],
                    new IOException("WSDLToJava has failed. Please see output")
            )
        }
    }
}

compileJava.dependsOn += wsdl2java
compileJava.source wsdl2java.outputs.files, sourceSets.main.java

assemble.dependsOn 'propertyJar'

task propertyJar(type: Jar) {
    archiveName = "wsdlToJar-1.0.jar"
    from('build/classes/main') { //add .java files to jar
        include 'com/**'
    }

    from('build/wsdlSources') {
        include 'com/**'              //add .java files to jar
        include 'uk/**'
    }
}